name: use kimi to create prototype from prd
on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]
  workflow_dispatch:

jobs:
  prd-to-prototypes:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@prd')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@prd')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@prd')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@prd') || contains(github.event.issue.title, '@prd')))
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Claude Code for Issue Triage
        uses: anthropics/claude-code-base-action@beta
        with:
          # prompt_file: ./prompts/game-app.md
          prompt: "使用html+css+js创建"
          timeout_minutes: "60"
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          allowed_tools: "Edit,Read,Write,MultiEdit,Glob,Grep,LS,TodoRead,TodoWrite,Bash(just test),Bash(just test:*),Bash(just lint),Bash(just fmt),Bash(just build),Bash(cargo test:*),Bash(cargo build:*),Bash(cargo check:*),Bash(cargo clippy:*),Bash(cargo fmt:*),Bash(rustfmt:*),Bash(clippy:*),Bash(ls:*),Bash(cat:*),Bash(head:*),Bash(tail:*),Bash(grep:*),Bash(rg:*),Bash(awk:*),Bash(sed:*),Bash(sort:*),Bash(uniq:*),Bash(wc:*),Bash(which:*),Bash(command:*),Bash(type:*),Bash(echo:*),Bash(printf:*),Bash(test:*),Bash([:*),Bash(basename:*),Bash(dirname:*),Bash(realpath:*),Bash(readlink:*),Bash(date:*),Bash(env:*),Bash(pwd),Bash(git status),Bash(git diff:*),Bash(git log:*),Bash(git add:*),Bash(git commit:*),Bash(git branch:*),Bash(git rev-parse:*),Bash(git show:*),WebFetch(domain:github.com)"          
        env:
          # Provider configuration
          ANTHROPIC_BASE_URL: "https://api.moonshot.cn/anthropic/"       
      - name: Commit and push data folder
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Update" 
          git push || echo "No changes to push"
